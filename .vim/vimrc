" vimrc file for vim configuration, 22-05-2020, Prakash Acharya
scriptencoding utf-8

set expandtab
set tabstop=4                   " use 4 spaces for tab
set shiftwidth=4

set nobackup                    " default, do not keep backup but
set writebackup                 " create one before writing and remove after

set ttymouse=xterm2             " so that mouse works even when under tmux
set mouse=a                     " enable mouse on all modes

set number
set relativenumber
set numberwidth=1               " minimum width for the number column

set viminfofile=~/.vim/viminfo
set viminfo='50,<1000,s100,%100

syntax on
set modeline
set modelines=5                 " top or bottom 5 lines for modeline i.e # vim:

set wildmenu                    " menu style command line completion
set wildignorecase
highlight WildMenu ctermbg=yellow ctermfg=black
set wildmode=longest:full,list:full

set ignorecase
set smartcase
set showmatch

set title

set novisualbell
set noerrorbells

set incsearch                   " show incremental search pattern
set hlsearch

highlight Search cterm=None ctermfg=yellow ctermbg=black
highlight Visual cterm=reverse ctermbg=NONE

set history=5000

let mapleader = '-'
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>c :pclose<CR>
nnoremap <leader>f :Files<CR>
nnoremap <leader>h <C-w>h
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
nnoremap <leader>v :vertical rightbelow wincmd f<CR>
nnoremap <leader>x :close<CR>

" map up and down key for Ctrl-p and Ctrl-n
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

noremap ' `
set path+=**

set scrolloff=3                 " keep 3 top and bottom line when scrolling

set list
set listchars=tab:→\ ,trail:•,nbsp:•
let &showbreak='↪ '             " wrapped lines

highlight ColorColumn ctermbg=darkred
if expand('%:t') ==# 'COMMIT_EDITMSG'
    set colorcolumn=73
else
    set colorcolumn=80
endif

" use ctlr-l to mute search highlighting
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>

augroup vimrc
    autocmd!
augroup END

autocmd vimrc FileType yaml setlocal tabstop=2 shiftwidth=2
autocmd vimrc FileType groovy setlocal colorcolumn=100
autocmd vimrc BufNewFile,BufRead *.py setlocal keywordprg=pydoc3

augroup quickfix
    autocmd!
augroup END

autocmd quickfix QuickFixCmdPost *grep* cwindow

set noruler
set laststatus=2

function! LinterStatus() abort
    let l:counts = ale#statusline#Count(bufnr(''))

    let l:all_errors = l:counts.error + l:counts.style_error
    let l:all_non_errors = l:counts.total - l:all_errors

    return l:counts.total == 0 ? 'OK' : printf(
    \   '%dW %dE',
    \   all_non_errors,
    \   all_errors
    \)
endfunction

set statusline=
set statusline+=%1*\ %t\ %*                 " file name (tail) of the buffer
set statusline+=%2*\ %y\ %*                 " type of the file in the buffer
set statusline+=%6*\ [buf:%n]\ %*           " buffer number
set statusline+=%4*\ [%{LinterStatus()}]\ %* " warning and error count
set statusline+=%{gutentags#statusline()}
set statusline+=%4*\ %=%<%{getcwd()}\ %*    " separation and pwd
set statusline+=%3*\ %m%r\ %*               " modified flag and read only flag
set statusline+=%4*\ %c\ %*                 " column number
set statusline+=%2*\ %l/%L%*                " line number/no. of lines

highlight User1 ctermfg=black ctermbg=green
highlight User2 ctermfg=black ctermbg=yellow
highlight User3 ctermfg=black ctermbg=lightblue
highlight User4 ctermfg=white ctermbg=magenta cterm=bold
highlight User5 ctermfg=white ctermbg=magenta cterm=bold
highlight User6 ctermfg=cyan ctermbg=white cterm=bold

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
let g:ale_echo_msg_format = '[%linter%] %code%: %s [%severity%]'
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

let g:gutentags_file_list_command = 'rg --files'

" toggle fold with space
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

set backspace=indent,eol,start    " backspacing works for these

set grepprg=rg\ --vimgrep\ --no-stats
set grepformat=%f:%l:%c:%m,%f:%l:%m

execute pathogen#infect()

filetype plugin on
packloadall                       " load all packages in the start directory
packadd! cfilter
packadd! matchit
silent! helptags ALL              " generate helptags
