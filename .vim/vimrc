" vimrc file for vim configuration, 06-05-2020, Prakash Acharya
scriptencoding utf-8

" use 4 spaces for tab
set expandtab
set tabstop=4

" insert four spaces when giving > command
set shiftwidth=4

" set relative line number on the left and set the width to 1
set number
set relativenumber
set numberwidth=1

" enable syntax highlighting and set modeline
syntax on
set modeline
set modelines=5

" set tab completion to something similar to bash
set wildmode=longest,list

" When searching try to be smart about cases
set ignorecase
set smartcase

" show matching bracket
set showmatch

" set terminal title
set title

" no bells
set novisualbell
set noerrorbells

" show incremental search pattern
set incsearch
set hlsearch

highlight Search cterm=None ctermfg=yellow ctermbg=black
highlight Visual cterm=reverse ctermbg=NONE

" remember more commands
set history=500

"map up and down key for Ctrl-p and Ctrl-n
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

" add common suffixes for gf command
set suffixesadd=.py

" make scrolling easier
set scrolloff=3

" make tabs and trailing whitespace visible
set list
set listchars=tab:→\ ,trail:•,nbsp:•

" string to put at the start of the wrapped lines
let &showbreak='↪ '

highlight ColorColumn ctermbg=darkred
if expand('%:t') ==# 'COMMIT_EDITMSG'
    set colorcolumn=73
else
    set colorcolumn=80
endif

" use ctlr-l to mute search highlighting
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>

" load all packages in the start directory and generate helptags
packloadall
silent! helptags ALL

augroup vimrc
    autocmd!
augroup END

autocmd vimrc FileType yaml setlocal tabstop=2 shiftwidth=2
autocmd vimrc FileType groovy setlocal colorcolumn=100
autocmd vimrc BufNewFile,BufRead *.py setlocal keywordprg=pydoc3

set noruler
set laststatus=2

set statusline=
set statusline+=%1*\ %t%*                 " file name (tail) of the buffer
set statusline+=%2*\ %y%*                 " type of the file in the buffer
set statusline+=%4*\ %=%<%{getcwd()}%*    " separation and pwd
set statusline+=%3*\ %m%r%*               " modified flag and read only flag
set statusline+=%4*\ %c%*                 " column number
set statusline+=%2*\ %l/%L%*              " line number/no. of lines in buffer

highlight User1 ctermfg=black ctermbg=green
highlight User2 ctermfg=black ctermbg=yellow
highlight User3 ctermfg=black ctermbg=lightblue
highlight User4 ctermfg=white ctermbg=magenta
highlight User5 ctermfg=white ctermbg=magenta cterm=bold

" ALE related config
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0

let g:ale_echo_msg_format = '[%linter%] %code%: %s [%severity%]'
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" toggle fold with space
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

" if empty, backspacing is not allowed
set backspace=indent,eol,start
