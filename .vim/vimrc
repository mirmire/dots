" vimrc file for vim configuration, 05-05-2020, Prakash Acharya
scriptencoding utf-8

" use 4 spaces for tab
set expandtab
set tabstop=4

" insert four spaces when giving > command
set shiftwidth=4

" set relative line number on the left and set the width to 1
set number
set relativenumber
set numberwidth=1

" enable syntax highlighting and set modeline
syntax on
set modeline
set modelines=5

" set tab completion to something similar to bash
set wildmode=longest,list

" When searching try to be smart about cases
set ignorecase
set smartcase

" show matching bracket
set showmatch

" set terminal title
set title

" no bells
set novisualbell
set noerrorbells

" show incremental search pattern
set incsearch
set hls

highlight Search cterm=None ctermfg=yellow ctermbg=black
highlight Visual cterm=reverse ctermbg=NONE

" remember more commands
set history=500

"map up and down key for Ctrl-p and Ctrl-n
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

" add common suffixes for gf command
set suffixesadd=.py

" make scrolling easier
set scrolloff=3

" make tabs and trailing whitespace visible
set list
set listchars=tab:→\ ,trail:•,nbsp:•

" string to put at the start of the wrapped lines
let &showbreak='↪ '

highlight ColorColumn ctermbg=darkred
if expand('%:t') ==# 'COMMIT_EDITMSG'
    set colorcolumn=73
else
    set colorcolumn=80
endif

" use ctlr-l to mute search highlighting
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>

augroup vimrc
    autocmd!
augroup END

autocmd vimrc FileType yaml setlocal tabstop=2 shiftwidth=2
autocmd vimrc FileType groovy setlocal colorcolumn=100

execute pathogen#infect()

" syntastic related config {{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_aggregate_errors = 1
let g:syntastic_id_checkers = 1

let g:syntastic_markdown_checkers = ['proselint']
let g:syntastic_python_checkers = ['pylint', 'flake8']
let g:syntastic_shell_checkers = ['shellcheck']
let g:syntastic_vim_checkers = ['vint']
let g:syntastic_yaml_checkers = ['yamllint']
" }}

" use folds
set foldcolumn=1
set foldmethod=indent
set nofoldenable
highlight Folded ctermbg=grey ctermfg=black
highlight FoldColumn ctermbg=grey ctermfg=black

" toggle fold with space
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

" if empty, backspacing is not allowed
set backspace=indent,eol,start
